# Мутации с основными данными
extend type Mutation{
    createExcavator(
        data: ProjectInput
        tasks: [ProjectTasksInput]
        stages: [ProjectStageInput]
        irds: [ProjectIrdInput]
    ): Project! @checkRole(roles:  ["ADMIN", "GEN_DIR","TECH_DIR","EMPLOYEE","OFF_WORKER","BOOKMAKER","LAWYAR","FIN_DIR","PROGRAMMER"])
    createExcavatorBucketType(
        data: ProjectInput
        tasks: [ProjectTasksInput]
        stages: [ProjectStageInput]
        irds: [ProjectIrdInput]
    ): Project! @checkRole(roles:  ["ADMIN", "GEN_DIR","TECH_DIR","EMPLOYEE","OFF_WORKER","BOOKMAKER","LAWYAR","FIN_DIR","PROGRAMMER"])
    createManufacturer(
        name: ID
    ): Int @checkRole(roles:  ["ADMIN", "GEN_DIR","TECH_DIR","EMPLOYEE","OFF_WORKER","BOOKMAKER","LAWYAR","FIN_DIR","PROGRAMMER"])
    createManufacturer(
        name: ID
    ): Int @checkRole(roles:  ["ADMIN", "GEN_DIR","TECH_DIR","EMPLOYEE","OFF_WORKER","BOOKMAKER","LAWYAR","FIN_DIR","PROGRAMMER"])
}

# Основная модель проекта
type Project{
    id: ID!
    number: String
    name: String
    prepayment: Int
    organization_customer: Organization
    type_project_document: TypeProjectDocument
    facilities: [Facility]
    date_signing: String
    date_create: String
    duration: Int
    date_end: String
    status: ProjectStatus
    date_completion: String
    delegations: [Contact]
    price: Int
    project_irds: [ProjectIRD]
    project_stages: [ProjectStage]
    project_tasks: [ProjectTask]
}

# побочные
input SectionReferencesToProject {
    projectId: ID!
    SectionReferencesId: ID
    data: String
}
input ProjectIrdInput {
    stage: ID
    persent: Int
    date_start: String
    date_end: String
    number: Int
}input ProjectStageInput {
    stage: ID
    persent: Int
    date_start: String
    date_end: String
    number: Int
}input ProjectTasksInput {
    stage: ID
    persent: Int
    date_start: String
    date_end: String
    number: Int
}


input TasksToProject {
    id: ID
    projectId: ID!
    inherited_task_ids: [ID]
    task_id: ID!
    date_start: String
    date_end: String
    duration: String
    price: Float
    executors: [TaskExecutor]
    description: String
}
input TaskExecutor {
    id: ID
    executor_id: ID
    price: Int
}
