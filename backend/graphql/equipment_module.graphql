type Mutation {
    updateEquipmentTypeParameters(
        equipment_type_id: ID
        add_parameter_ids: [ID]
        remove_parameter_ids: [ID]
    ): EquipmentType
}
extend type Query {
    suppliers(queryOptions: QueryOptions, queryType: String): SupplierResult
    parameter(id: ID): Parameter
    parameters(queryOptions: QueryOptions, queryType: String): [ParameterResult]

    equipmentTypeActivitys(
        queryOptions: QueryOptions
        queryType: String
    ): EquipmentTypeActivitysResult

    equipmentGroups(
        queryOptions: QueryOptions
        queryType: String
    ): EquipmentGroupResult
    equipmentModels(
        queryOptions: QueryOptions
        queryType: String
    ): EquipmentModelResult
    equipmentTypes(
        queryOptions: QueryOptions
        queryType: String
    ): EquipmentTypeResult
    equipmentType(id: ID): EquipmentType
}
type EquipmentTypeActivity {
    id: ID
    name: String
}

type EquipmentTypeActivitysResult {
    items: [EquipmentTypeActivity]
    count: Int
}

type ParameterResult {
    items: [Parameter]
    count: Int
}
type SupplierResult {
    items: [Supplier]
    count: Int
}
type EquipmentGroupResult {
    items: [EquipmentGroup]
    count: Int
}
type EquipmentModelResult {
    items: [EquipmentModel]
    count: Int
}
type EquipmentTypeResult {
    items: [EquipmentType]
    count: Int
}
type Supplier {
    id: ID
    name: String
    contact: Contact
    email: String
    phone_number: String
    equipment_types: [EquipmentType]
}

type Mutation {
    createParameter(data: ParameterInput!): Parameter @create
    updateParameter(data: ParameterInput!, id: ID): Parameter @create
    updateParameter(id: ID!, data: ParameterInput!): Parameter @update
    deleteParameter(id: ID!): Parameter @delete
}

input ParameterInput {
    name: String
    unit_id: ID
    min: Float
    max: Float
}

type Mutation {
    createEquipmentTypesActivity(
        data: EquipmentTypesActivityInput!
    ): EquipmentTypesActivity @create
    updateEquipmentTypesActivity(
        id: ID!
        data: EquipmentTypesActivityInput!
    ): EquipmentTypesActivity @update
    deleteEquipmentTypesActivity(id: ID!): EquipmentTypesActivity
}

input EquipmentTypesActivityInput {
    name: String
}

extend type Mutation {
    createEquipmentType(data: EquipmentTypeInput!): EquipmentType
    updateEquipmentType(id: ID!, data: EquipmentTypeInput!): EquipmentType
        @update
    deleteEquipmentType(id: ID!): EquipmentType
}

input EquipmentTypeInput {
    name: String!
    type_activity_id: ID
    group_id: ID
}

type Mutation {
    createEquipmentModel(data: EquipmentModelInput!): EquipmentModel @create
    updateEquipmentModel(id: ID!, data: EquipmentModelInput!): EquipmentModel
        @update
    deleteEquipmentModel(id: ID!): EquipmentModel @delete
}

input EquipmentModelInput {
    model_name: String!
    equipment_type_id: ID
    equipment_type_activity_id: ID
    supplier_id: ID
}

type Mutation {
    createEquipmentModel(data: EquipmentModelInput!): EquipmentModel @create
    updateEquipmentModel(id: ID!, data: EquipmentModelInput!): EquipmentModel
        @update
    deleteEquipmentModel(id: ID!): EquipmentModel @delete
}

input EquipmentModelInput {
    model_name: String
    equipment_type_id: ID
    equipment_type_activity_id: ID
    supplier_id: ID
}

type Mutation {
    createEquipmentGroup(data: EquipmentGroupInput!): EquipmentGroup @create
    updateEquipmentGroup(id: ID!, data: EquipmentGroupInput!): EquipmentGroup
        @update
    deleteEquipmentGroup(id: ID!): EquipmentGroup @delete
}

input EquipmentGroupInput {
    name: String!
}

type EquipmentGroup {
    id: ID!
    name: String!
}

type EquipmentModel {
    id: ID!
    model_name: String
    equipment_type_id: ID
    equipment_type: EquipmentType
    equipment_type_activity_id: ID
    supplier_id: ID
    supplier: Supplier
    parameters: [Parameter]
    parameterValue: [ParameterValue]
}

type EquipmentType {
    id: ID!
    name: String!
    type_activity: EquipmentTypesActivity
    group: EquipmentGroup
    parameters: [Parameter]
}

type EquipmentTypesActivity {
    id: ID!
    name: String!
}

type Parameter {
    id: ID!
    name: String!
    unit_id: ID
    unit: Unit
    reference: Reference
    group: ParameterGroup
    min: Float
    max: Float
}
type ParameterGroup {
    id: ID!
    name: String!
}
type ParameterValue {
    parameter: Parameter
    value: Float
}
type Unit {
    id: ID!
    name: String!
    name_latex: String
}
