type Query {
    contactsTable(page: Int, limit: Int, search: String, sortField: String, sortOrder: String, searchOrganizationId: String): ContactsResult
    organizationsTable(page: Int, limit: Int, search: String, sortField: String, sortOrder: String): OrganizationsResult
    positionsTable(page: Int, limit: Int, search: String, sortField: String, sortOrder: String): PositionsResult
    irdsTable(page: Int, limit: Int, search: String, sortField: String, sortOrder: String): IrdsResult
    stagesTable(page: Int, limit: Int, search: String, sortField: String, sortOrder: String): StagesResult

    contacts: [Contact]!
    positionsNames: [PositionName!]!
    currentUser: User!

    organizations: [Organization]

    templatesIrdsTypeProjects(typeProject: ID): [IRD]
    templatesContentsTypeProjects(typeProject: ID): [Content]
    templatesStagesTypeProjects(typeProject: ID): [Stage]


    projectStatuses: [ProjectStatus!]!
    typeProjectDocuments: [TypeProjectDocument]
    facilitys: [Facility!]!

    irds: [IRD]!
    stages: [Stage]!

    projects: [Project!]!
    projectStagesGroup: [ProjectStagesGroup!]!
    projectStages: [ProjectStage]!
    biks: [Bik!]!
    legalForms: [LegalForm]!
    persons: [Person]!
    passportPlaceIssues: [PassportPlaceIssue]!
    banks: [Bank]!
}

type Mutation {

    updateIrdsTemplate(
        typeProjectId: ID!
        listIrds_id: [ID!]!
        listStageNumber: [Int]
        listAppNumber: [Int]
    ) : Int

    updateStagesTemplate(
        typeProjectId: ID!
        listStages_id: [ID!]!
        listPercent: [Int]
        listNumber: [Int]
    ) : Int



    addTypeProject(
        name: String!
        code: String!
    ): TypeProjectDocument!

    updateTypeProject(
        id: ID!
        name: String!
        code: String!
    ): TypeProjectDocument!

    addIrd(
        name: String!
    ): IRD!

    updateIrd(
        id: ID!
        name: String!
    ): IRD!

    addStage(
        name: String!
    ): Stage!

    updateStage(
        id: ID!
        name: String!
    ): Stage!



    addPpi(
        name: String!
        code: String!
    ): PassportPlaceIssue!

    updatePpi(
        id: ID!
        name: String!
        code: String!
    ): PassportPlaceIssue!

    addBik(
        BIK: String!
        name: String!
        correspondent_account: String
    ): Bik!

    updateBik(
        id: ID!
        BIK: String!
        name: String!
        correspondent_account: String
    ): Bik!
    addContact(
        first_name: String!
        last_name: String
        patronymic: String
        birth_day: String
        work_phone: String
        mobile_phone: String
        work_email: String
        email: String
        position_id: ID
        organization_id: ID
    ): Contact!

    updateContact(
        id: ID!
        first_name: String!
        last_name: String
        patronymic: String
        birth_day: String
        work_phone: String
        work_email: String
        mobile_phone: String
        email: String
        position_id: ID
        organization_id: ID
    ): Contact!
    deleteContact (
        id: ID!
    ): Contact
    deletePerson (
        id: ID!
    ): Person
    deleteOrganization (
        id: ID!
    ): Organization
    addOrganization(
        legal_form_id: ID!
        name: String!
        full_name: String!
        address_legal: String
        office_number_legal: String
        address_mail: String
        office_number_mail: String
        phone_number: String
        fax_number: String
        email: String
        INN: String
        OGRN: String
        OKPO: String
        KPP: String
        BIK_id: ID
        payment_account: String
        director_id: ID
    ): Organization!

    updateOrganization(
        id: ID!
        legal_form_id: ID!
        name: String!
        full_name: String
        address_legal: String
        office_number_legal: String
        address_mail: String
        office_number_mail: String
        phone_number: String
        fax_number: String
        email: String
        INN: String
        OGRN: String
        OKPO: String
        KPP: String
        BIK_id: ID
        payment_account: String
        director_id: ID
    ): Organization!

    updatePerson(
        id: ID!
        firstname: String
        lastname: String
        patronymic: String
        serial: String
        number: String
        passport_place_issue_id: ID
        birth_date: String
        date: String

        SHILS: String
        INN: String
        payment_account: String
        phone_number: String
        email: String
        email_sibnipi: String
        bank_id: ID
        bik_id: ID
    ): Person!
    addPerson(
        firstname: String
        lastname: String
        patronymic: String
        serial: String
        number: String
        passport_place_issue_id: ID
        birth_date: String
        date: String

        SHILS: String
        INN: String
        payment_account: String
        phone_number: String
        email: String
        email_sibnipi: String
        bank_id: ID
        bik_id: ID
    ): Person!

    updateFacility(
        id: ID!
        name: String!
        type: ID!
    ): Facility!
    addFacility(
        name: String!
        type: ID!
    ): Facility!

    updateProject(
        id: ID!
        number: String!
        name: String!
        organization_customer_id: ID
        type_project_document_id: ID
        facility_id: ID
        date_signing: String
        IAD_id: ID
        duration: Int
        date_end: String
        status_id: ID
        date_completion: String
        delegate_id: ID
    ): Project!
    addProject(
        number: String!
        name: String!
        organization_customer_id: ID
        type_project_document_id: ID
        facility_id: ID
        date_signing: String
        duration: Int
        date_end: String
        status_id: ID
        date_completion: String
        delegate_id: ID
    ): Project!

    updateProjectStage(
        id: ID!
        project_id: ID!
        stage_id: ID!
        progress: String!
        date_start: String!
        duration: String!
    ): ProjectStage!
    addProjectStage(
        project_id: ID!
        stage_id: ID!
        progress: String!
        date_start: String!
        duration: String!
    ): ProjectStage!
}

type ContactsResult {
    contacts: [Contact]
    count: Int
}
type OrganizationsResult {
    organizations: [Organization]
    count: Int
}
type PositionsResult {
    positions: [Position]
    count: Int
}
type IrdsResult {
    irds: [IRD]
    count: Int
}
type StagesResult {
    stages: [Stage]
    count: Int
}
type Contact {
    id: ID!
    first_name: String!
    last_name: String
    patronymic: String
    birth_day: String
    work_phone: String
    work_email: String
    mobile_phone: String
    email: String
    position: Position
    organization: Organization
}
type ProjectStatus{
    id: ID!
    name: String!
}
type PositionName {
    id: ID!
    name: String!
}

type CurrentUser {
    user: User!
    access_token: String!
}

type User {
    id: ID!
    name: String!
    email: String!
    role: Role!
}

type Role {
    id: ID!
    name: String!
}
type Content {
    id: ID!
    name: String!
}
type Position {
    id: ID!
    name: String!
}

input RegisterInput {
    name: String!
    email: String!
    password: String!
}

input LoginInput {
    email: String!
    password: String!
}

type AuthPayload {
    user: User!
    access_token: String!
}

type Organization{
    id: ID!
    legal_form: LegalForm!
    name: String!
    full_name: String
    address_legal: String
    office_number_legal: String
    address_mail: String
    office_number_mail: String
    phone_number: String
    fax_number: String
    email: String
    INN: String
    OGRN: String
    OKPO: String
    KPP: String
    Bik: Bik
    payment_account: String
    director: Contact
}
type LegalForm{
    id: ID!
    name: String!
}
type Bik{
    id: ID!
    Bik: String
    name: String
    correspondent_account: String
}

type TypeProjectDocument{
    id: ID!
    code: String!
    name: String!
}
type Person{
    id: ID!
    passport: Passport!
    SHILS: String
    INN: String
    payment_account: String
    phone_number: String
    email: String
    email_sibnipi: String
    bank: Bank
    BIK: Bik
}
type Passport{
    id: ID!
    firstname: String
    lastname: String
    patronymic: String
    serial: String
    number: String
    passport_place_issues: PassportPlaceIssue
    birth_date: String
    date: String
}
type PassportPlaceIssue{
    id: ID!
    name: String!
    code: String!
}
type Bank{
    id: ID!
    name: String!
}
type Note{
    id: ID!
    name: String!
}
type Facility{
    id: ID!
    name: String!
    type: TypeFacility!
}
type TypeFacility{
    id: ID!
    name: String!
}
type Project{
    id: ID!
    number: String
    name: String
    organization_customer: Organization
    type_project_document: TypeProjectDocument
    facility: Facility
    date_signing: String
    duration: Int
    date_end: String
    status: ProjectStatus
    date_completion: String
    delegate: Contact
}
type ProjectStagesGroup{
    id: ID!
    number: String
    name: String
    projectStage: [ProjectStage]!
}
type ProjectStage{
    id: ID!
    project: Project!
    stage: Stage!
    progress: String!
    date_start: String!
    duration: String!
}
type TypeProjectDocument{
    id: ID!
    name: String!
    code: String!
}
type IRD{
    id: ID!
    name: String!
}
type ProjectStatus{
    id: ID!
    name: String!
}
type ProjectIrds{
    project_id: ID!
    ird_id: ID!
    received: Boolean
}
type TemplateIrdsTypeProject{
    project_id: ID!
    ird_id: ID!
}


type Stage{
    id: ID!
    name: String!
}
extend type Mutation {
    register(input: RegisterInput!): AuthPayload!
    login(input:  LoginInput!): AuthPayload!
}
