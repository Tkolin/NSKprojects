#import auth.graphql
#import file_downloads.graphql
#import projects.graphql
#import result.graphql
#import templates.graphql
#import formula.graphql
type Query {
    contacts(queryOptions: QueryOptions, organizationId: ID): ContactsResult
    organizations(queryOptions: QueryOptions, organizationId: ID): OrganizationsResult
    positions(queryOptions: QueryOptions): PositionsResult
    irds(queryOptions: QueryOptions): IrdsResult
    stages(queryOptions: QueryOptions): StagesResult
    tasks(queryOptions: QueryOptions): TasksResult
    projects(queryOptions: QueryOptions, projectId: ID): ProjectsResult
    persons(queryOptions: QueryOptions): PersonsResult
    biks(queryOptions: QueryOptions): BikResult
    passportPlaceIssues(queryOptions: QueryOptions): PassportPlaceIssueResult
    banks(queryOptions: QueryOptions): BanksResult

    typeProjects(queryOptions: QueryOptions): TypeProjectsResult
    technicalSpecification: TechnicalSpecificationResult
    typeTechnicalSpecification: TypeTechnicalSpecification
    sectionReferences: SectionReferenceResult
    groupTypeProjects: [GroupTypeProjectDocument]

    templatesIrdsTypeProjects(typeProject: ID): [TemplateIRD]
    templatesStagesTypeProjects(typeProject: ID): [TemplateStage]
    templatesTasksTypeProjects(typeProject: ID): [TemplateTask]
    templatesSectionReferencesTypeProjects(typeProject: ID): [TemplateSectionReference]

    projectIrds(queryOptions: QueryOptions, projectId: ID): [ProjectIRD]
    projectStages(queryOptions: QueryOptions ,projectId: ID): [ProjectStage]
    projectTasksQuery(queryOptions: QueryOptions ,projectId: ID): [ProjectTask]
    projectSectionReferences(queryOptions: QueryOptions ,projectId: ID): [ProjectSectionReference]

    formulaByKey(queryOptions: QueryOptions ,keys: [String!]): FormulaResult

    currentUser: User!

    legalForms: [LegalForm]!
    facilities: [SelectionFacility!]!
    TypePayments: [TypePayment]
    projectStatuses: [ProjectStatus!]!

    # paymentsProjects(queryOptions: QueryOptions, projectId: ID): [projectPayment]
}
input QueryOptions {
    id: Int
    page: Int
    limit: Int
    search: String
    sortField: String
    sortOrder: String
    searchOrganizationId: String
}

type Mutation {
    updateTask(
        names: [String]
    ): [Task]

    addTypeTechnicalSpecification(
        name: String
    ): TypeTechnicalSpecification
    updateTypeTechnicalSpecification(
        id: ID
        name: String
        techicalSpecification: ID
    ): TypeTechnicalSpecification

    addGroupTypeProject(
        name: String
        techicalSpecification: ID
    ): GroupTypeProjectDocument
    updateGroupTypeProject(
        id: ID
        name: String
    ): GroupTypeProjectDocument

    addTypeProject(
        name: String
        group_id: ID
        code: String
    ): TypeProjectDocument
    updateTypeProject(
        id: ID
        name: String
        group_id: ID
        code: String
    ): TypeProjectDocument
    deleteTypeProject (
        id: ID
    ): String

    addIrd(
        name: String
    ): IRD!
    updateIrd(
        id: ID!
        name: String!
    ): IRD!
    deleteIrd (
        id: ID!
    ): String

    addStage(
        name: String!
    ): Stage!
    updateStage(
        id: ID!
        name: String!
    ): Stage!
    deleteStage (
        id: ID!
    ): String

    addPpi(
        name: String!
        code: String!
    ): PassportPlaceIssue!
    updatePpi(
        id: ID!
        name: String!
        code: String!
    ): PassportPlaceIssue!

    addBik(
        bik: String!
        name: String!
        correspondent_account: String
    ):  bik!
    updateBik(
        id: ID!
        bik: String!
        name: String!
        correspondent_account: String
    ):  bik!

    addContact(
        first_name: String!
        last_name: String
        patronymic: String
        birth_day: String
        work_phone: String
        mobile_phone: String
        work_email: String
        email: String
        position_id: ID
        organization_id: ID
    ): Contact!
    updateContact(
        id: ID!
        first_name: String!
        last_name: String
        patronymic: String
        birth_day: String
        work_phone: String
        work_email: String
        mobile_phone: String
        email: String
        position_id: ID
        organization_id: ID
    ): Contact!
    deleteContact (
        id: ID!
    ): Contact


    addOrganization(
        legal_form_id: ID!
        name: String!
        full_name: String!
        address_legal: String
        office_number_legal: String
        address_mail: String
        office_number_mail: String
        phone_number: String
        fax_number: String
        email: String
        INN: String
        OGRN: String
        OKPO: String
        KPP: String
        bik_id: ID
        payment_account: String
        director_id: ID
    ): Organization!
    updateOrganization(
        id: ID!
        legal_form_id: ID!
        name: String!
        full_name: String
        address_legal: String
        office_number_legal: String
        address_mail: String
        office_number_mail: String
        phone_number: String
        fax_number: String
        email: String
        INN: String
        OGRN: String
        OKPO: String
        KPP: String
        bik_id: ID
        payment_account: String
        director_id: ID
    ): Organization!
    deleteOrganization (
        id: ID!
    ): Organization

    addPerson(
        firstname: String
        lastname: String
        patronymic: String
        serial: String
        number: String
        passport_place_issue_id: ID
        address_registration: String
        address_residential: String
        birth_date: String
        date: String
        SHILS: String
        INN: String
        payment_account: String
        phone_number: String
        email: String
        email_sibnipi: String
        bank_id: ID
        bik_id: ID
    ): Person!
    updatePerson(
        id: ID!
        firstname: String
        lastname: String
        patronymic: String
        serial: String
        number: String
        passport_place_issue_id: ID
        address_registration: String
        address_residential: String
        brth_date: String
        date: String
        SHILS: String
        INN: String
        payment_account: String
        phone_number: String
        email: String
        email_sibnipi: String
        bank_id: ID
        bik_id: ID
    ): Person!
    deletePerson (
        id: ID!
    ): Person

    updateFacility(
        id: ID!
        name: String!
        type: ID!
    ): Facility!
    addFacility(
        name: String!
        type: ID!
    ): Facility!
}
type Contact {
    id: ID!
    first_name: String!
    last_name: String
    patronymic: String
    birth_day: String
    work_phone: String
    work_email: String
    mobile_phone: String
    email: String
    position: Position
    organization: Organization
}
type ProjectStatus{
    id: ID!
    name: String!
}
type PositionName {
    id: ID!
    name: String!
}
type CurrentUser {
    user: User!
    access_token: String!
}
type TypePayment {
    id: ID!
    name: String!
}
type projectPayment {
    id: ID!
    date_time_payment: String
    project: Project
    type_payment: TypePayment
    price: Int
}
type User {
    id: ID!
    name: String
    email: String
    role: Role
}
type Role {
    id: ID!
    name: String!
}
type Content {
    id: ID!
    name: String!
}
type Position {
    id: ID!
    name: String!
}
type Organization{
    id: ID!
    legal_form: LegalForm!
    name: String!
    full_name: String
    address_legal: String
    office_number_legal: String
    address_mail: String
    office_number_mail: String
    phone_number: String
    fax_number: String
    email: String
    INN: String
    OGRN: String
    OKPO: String
    KPP: String
    bik:  bik
    payment_account: String
    director: Contact
}
type LegalForm{
    id: ID!
    name: String!
}
type  bik{
    id: ID!
    BIK: String
    name: String
    correspondent_account: String
}
type Person{
    id: ID!
    passport: Passport!
    SHILS: String
    INN: String
    payment_account: String
    phone_number: String
    email: String
    email_sibnipi: String
    bank: Bank
    bik:  bik
}
type Passport{
    id: ID!
    firstname: String
    lastname: String
    patronymic: String
    serial: String
    number: String
    address_residential: String
    address_registration: String
    passport_place_issue: PassportPlaceIssue
    birth_date: String
    date: String
}
type PassportPlaceIssue{
    id: ID!
    name: String!
    code: String!
}
type Bank{
    id: ID!
    name: String!
}
type Facility{
    id: ID!
    name: String!
    code: Int
    type_facility: TypeFacility
    group_facility: GroupFacility
}
type TypeFacility{
    id: ID!
    name: String!
}
type GroupFacility{
    id: ID!
    name: String!
    code: Int
    facilities: [Facility]
    subselection_facility: SubselectionFacility
}
type SubselectionFacility{
    id: ID!
    name: String!
    code: Int
    group_facility: [GroupFacility]
    selection_facility: SelectionFacility
}
type SelectionFacility{
    id: ID!
    name: String!
    code: Int
    subselection_facility: [SubselectionFacility]
}
type ProjectSectionReference{
    id: ID!
    project: Project
    section_reference: SectionReference
    values: String
}
type TypeProjectDocument{
    id: ID!
    name: String!
    code: String!
    group: GroupTypeProjectDocument
}
type IRD{
    id: ID!
    name: String!
}
type GroupTypeProjectDocument{
    id: ID
    name: String
    technical_specification: TypeTechnicalSpecification
}
type TypeTechnicalSpecification{
    id: ID!
    name: String!
}
type SectionReference{
    id: ID!
    name: String!
    description: String!
    values: String!
}
type Stage{
    id: ID!
    name: String
}
type Task{
    id: ID!
    name: String
}



