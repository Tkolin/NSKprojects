#
#   - QUERY -
#
#type Query {
#
#}
#-INPUTS:
#-TYPES:


#
#   - MUTATIONS -
#
extend type Mutation {
    downloadFile(id: ID!): Url! @checkRole(permission:  ["download-file"])
    uploadFileLink(url: String!): UploadFileLinkResponse! @checkRole(permission:  ["upload-file"])

    personOrderFileDownload(
        personId: ID
        tasksId: [ID]
    ): Url! @checkRole(permission:  ["download-file-projectPersonOrder"])
    projectPaymentInvoiceFileDownload(
        projectId: ID!
        stageNumber: ID
        isPrepayment: Boolean
    ): Url! @checkRole(permission:  ["download-file-paymentInvoice"])
    projectActRenderingFileDownload(
        projectId: ID
        stageNumber: Int
    ): Url! @checkRole(permission:  ["download-file-actRendering"])
    projectContractGenerated(
        projectId: ID!
        dateCreateContract: String!
    ): Project! @checkRole(permission:  ["download-file-projectContract"])
    projectOrderFileDownload(
        projectId: ID
    ): Url! @checkRole(permission:  ["download-file-projectOrder"])
    projectIrdsFileDownload(
        projectId: ID
    ): Url! @checkRole(permission:  ["download-file-projectIrds"])
    projectStagesFileDownload(
        projectId: ID
    ): Url! @checkRole(permission:  ["download-file-projectStages"])
    taskExecutorContractFileDownload(
        projectTasksIds: [ID]
    ): Url! @checkRole(permission:  ["download-file-taskExecutorContract"])
    generatedExecutorOrder(
        project_task_ids: [ID]
    ): GenerateFileResult! @checkRole(permission:  ["generated-file-executorOrder"])
}
#-INPUTS:
#-RESULTS:
type GenerateFileResult {
    url: String
    file: File
}
type UploadFileLinkResponse {
    success: Boolean!
    file: File
}
type Url {
    url: String
}
type Attachment {
    name: String
    path: String
}
