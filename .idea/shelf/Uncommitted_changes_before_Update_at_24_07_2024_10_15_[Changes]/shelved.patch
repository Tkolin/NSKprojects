Index: frontend/src/page/ProjectTable/components/TableColumn.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {\r\n    Button,\r\n    Card,\r\n    DatePicker,\r\n    Divider,\r\n    Modal,\r\n    notification,\r\n    Popconfirm,\r\n    Row,\r\n    Space,\r\n    Tooltip,\r\n    Typography,\r\n    Upload\r\n} from \"antd\";\r\nimport Link from \"antd/es/typography/Link\";\r\nimport {\r\n    DeleteOutlined, DownloadOutlined,\r\n    EditOutlined, MinusOutlined, MoreOutlined, PlusOutlined,\r\n    PushpinFilled,\r\n    PushpinOutlined,\r\n    ReconciliationOutlined, UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport ProjectFileDownload from \"../../components/script/fileDownloadScripts/ProjectFileDownload\";\r\nimport {facilitiesToFullCode} from \"../../components/script/rebuildData/ProjectRebuilderQuery\";\r\nimport dayjs from \"dayjs\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {StyledButtonGreen} from \"../../components/style/ButtonStyles\";\r\nimport {UploadFileExecutorOrder, UploadFileProjectContractSigned} from \"../../components/UploadFile\";\r\nimport LinkToDownload from \"../../components/script/fileDownloadScripts/LinkToDownload\";\r\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\r\nimport {BIKS_QUERY_BY_ID, PROJECTS_QUERY_BY_ID} from \"../../../graphql/queries/queriesByID\";\r\nimport {CHANGE_TEMPLATE_TYPE_PROJECT} from \"../../../graphql/mutations/project\";\r\nimport ProjectTasks from \"../../DistributionTasksByProject\";\r\nimport {nanoid} from \"nanoid\";\r\nimport ProjectForm from \"../../ProjectForm\";\r\nimport IrdsProjectForm from \"../../IrdToProjectForm\";\r\nimport StageToProjectForm from \"../../StageToProjectForm\";\r\nimport {ColumnToolRender} from \"./columns/ColumnToolRender\";\r\n\r\nconst formatCurrency = (amount) => {\r\n    return amount.toLocaleString('ru-RU', {style: 'currency', currency: 'RUB'});\r\n};\r\nconst {Text} = Typography;\r\n// progress\r\n// tool\r\n// main\r\n// customer\r\n// status\r\n// price\r\n\r\n\r\nexport const GetColumns = ({\r\n                               options,\r\n                               columnSizes,\r\n                               permissions,\r\n                               toolProps,\r\n\r\n                               onUpdated\r\n                           }\r\n) => {\r\n    //TODO:\r\n    const columns = options.map(row=>row.name);\r\n    const countColumns = options.length;\r\n    options.includes(\"tool\") && columns.push(columnToolComponent({width:\"32px\", ...toolProps}));\r\n    options.includes(\"main\") && columns.push(columnMainDataComponent({width: \"50%\", onUpdated: () => onUpdated()}));\r\n    options.includes(\"customer\") && columns.push(columnCustomerComponent({width: \"15%\"}));\r\n    options.includes(\"progress\") && columns.push(columnProgressComponent({width: \"5%\"}));\r\n    options.includes(\"status\") && columns.push(columnStatusComponent({width: \"10%\"}));\r\n    options.includes(\"price\") && columns.push(columnPriceComponent({width: \"15%\"}));\r\n    return columns;\r\n}\r\nexport const GetFullColumns = ({\r\n                                   permissions,\r\n                                   onUpdated\r\n                               }\r\n) => ([\r\n\r\n    //columnProgressComponent(\"5%\"),\r\n    //columnToolComponent(\"20px\"),\r\n    columnMainDataComponent({width: \"60%\", onUpdated: () => onUpdated()}),\r\n    columnCustomerComponent(\"15%\"),\r\n    columnStatusComponent(\"10%\"),\r\n    columnPriceComponent(\"15%\")\r\n])\r\nconst columnProgressComponent = (width = \"8%\") => ({\r\n    title: 'Прогресс',\r\n    dataIndex: 'progress',\r\n    key: 'progress',\r\n    width: width,\r\n    align: \"left\",\r\n    render: (text, record) => {\r\n        switch (record.status) {\r\n            case 'APPROVAL_KP':\r\n                return (\r\n                    <Space direction=\"vertical\">\r\n                        <Text>Проверка писем</Text>\r\n                        <Text>Либо ждём ответа, либо составляем письмо</Text>\r\n                        <Text>Дата последнего письма</Text>\r\n                        <Text type=\"warning\">если мы не ответили</Text>\r\n                        <Text type=\"danger\">если с последнего письма больше Х дней</Text>\r\n                    </Space>\r\n                );\r\n            case 'APPROVAL_AGREEMENT':\r\n                return (\r\n                    <Space direction=\"vertical\">\r\n                        <Text>(если все данные верны)</Text>\r\n                        <Text>Этапы - галочка</Text>\r\n                        <Text>Ирд - галочка</Text>\r\n                        <Text type=\"warning\">если данные не заполнены</Text>\r\n                        <Text type=\"danger\">если данные не верны</Text>\r\n                    </Space>\r\n                );\r\n            case 'WAITING_SOURCE':\r\n                return (\r\n                    <Space direction=\"vertical\">\r\n                        <Text>(Кол-во полученного ирд)</Text>\r\n                        <Text>Ирд - кол-во / дата последнего</Text>\r\n                        <Link>Кнопка приступить к работе</Link>\r\n                        <Text type=\"warning\">если ирд получено</Text>\r\n                        <Text type=\"danger\">если срок получения ирд превысил х дней</Text>\r\n                    </Space>\r\n                );\r\n            case 'WORKING':\r\n                return (\r\n                    <Space direction=\"vertical\">\r\n                        <Text>Этап - в работе</Text>\r\n                        <Text>Задачи - в работе</Text>\r\n                        <Text type=\"warning\"> - </Text>\r\n                        <Text type=\"danger\"> - </Text>\r\n                    </Space>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n})\r\n\r\nconst columnToolComponent = ({width = \"2%\", toolProps}) => {\r\n    return {\r\n        key: 'edit',\r\n        width: width,\r\n        render: (text, record) => <>\r\n            <ColumnToolRender text={text} record={record} {...toolProps}/>\r\n        </>,\r\n    }\r\n}\r\nconst columnMainDataComponent = ({width = \"48%\", onUpdated}) =>\r\n    ({\r\n        title: 'Основные данные',\r\n        permission: 'read-project',\r\n        dataIndex: 'main_data',\r\n        key: 'main_data',\r\n        width: width,\r\n        align: \"left\",\r\n        render:\r\n            (text, record) => {\r\n                const maxNumberRecord = record?.project_contract_history?.reduce((max, current) => {\r\n                    return (current.number > (max?.number || 0)) ? current : max;\r\n                }, null);\r\n\r\n                const fileId = maxNumberRecord ? maxNumberRecord.file_id : null;\r\n\r\n                return (\r\n                    <Space.Compact direction={\"vertical\"} style={{alignContent: \"start\"}}>\r\n                        <Title level={5} style={{marginTop: 0}}>{record.name}</Title>\r\n                        <Divider style={{margin: \"3px\"}}/>\r\n                        <Text>{record.number}</Text>\r\n                        <Text>({record.type_project_document?.code ?? \"\"}) {record.type_project_document?.name ?? \"\"}</Text>\r\n                        <Divider style={{margin: \"3px\", marginBottom: 0}}/>\r\n                        <Space.Compact direction={\"horizontal\"}>\r\n                            {record?.signed_file_id ? (\r\n                                    <>\r\n                                        <LinkToDownload fileId={record.signed_file_id}>Скачать (подписан)\r\n                                            от {record.date_signing}</LinkToDownload>\r\n                                    </>\r\n                                ) :\r\n                                (\r\n                                    <>\r\n                                        <ProjectFileDownload projectId={record.id} icon={<PlusOutlined/>}>Сгенерировать\r\n                                            договор</ProjectFileDownload>\r\n                                        {(fileId) ?\r\n                                            (<>\r\n                                                    <UploadFileProjectContractSigned\r\n                                                        type={\"primary\"}\r\n                                                        icon={<UploadOutlined/>}\r\n                                                        onUpdated={() => onUpdated()}\r\n                                                        projectId={record.id}>Загрузить\r\n                                                        подписанный файл</UploadFileProjectContractSigned>\r\n\r\n                                                    <LinkToDownload\r\n                                                        fileId={fileId}\r\n                                                        icon={<DownloadOutlined/>}>Скачать\r\n                                                        последний вариант</LinkToDownload>\r\n                                                    <Button icon={<MoreOutlined/>}/>\r\n                                                </>\r\n                                            ) :\r\n                                            (\r\n                                                <>\r\n                                                </>\r\n                                            )}\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                        </Space.Compact>\r\n                    </Space.Compact>\r\n                )\r\n            }\r\n\r\n    })\r\nconst columnCustomerComponent = (width = \"15%\") =>\r\n    ({\r\n        title: 'Данные о заказчике',\r\n        permission: 'read-organization',\r\n        dataIndex:\r\n            'customer_data',\r\n        key:\r\n            'customer_data',\r\n        width:\r\n        width,\r\n        align:\r\n            \"left\",\r\n        render:\r\n            (text, record) => (\r\n                <Space.Compact direction={\"vertical\"} style={{alignContent: \"start\"}}>\r\n                    {record.organization_customer ?\r\n                        <Title level={5} style={{marginTop: 0}}>{record.organization_customer?.name ?? \"?\"}</Title>\r\n                        :\r\n                        <Title level={5} style={{marginTop: 0, color: '#ff4d4f'}}>Организация не указана</Title>\r\n                    }\r\n                    <Text strong>Объекты:</Text>\r\n                    {record.facilities && record.facilities?.length > 0 ? (record.facilities?.map(row => (\r\n                            <Tooltip placement={\"leftBottom\"} title={\r\n                                `${row?.group_facility?.subselection_facility?.selection_facility.name}, ` +\r\n                                `${row?.group_facility?.subselection_facility?.name}, ` +\r\n                                `${row?.group_facility?.name}, ` +\r\n                                `${row?.name}.`\r\n                            }>\r\n                                < Text style={{marginLeft: 8, color: '#1677ff'}} key={row.id}>\r\n                                    {facilitiesToFullCode(row)}\r\n                                </Text>\r\n                            </Tooltip>\r\n                        )))\r\n                        :\r\n                        <Text type=\"danger\">Объекты отсутствуют\r\n                        </Text>\r\n                    }\r\n                    <Text strong>Представители:</Text>\r\n                    {record.delegations && record.delegations?.length > 0 ? (record?.delegations?.map(delegate => (\r\n                            <Link style={{marginLeft: 8}}\r\n                                  key={delegate.id}>{delegate?.last_name ?? \"\"} {delegate?.first_name ?? \"\"} {delegate?.patronymic ?? \"\"}\r\n                            </Link>\r\n                        )))\r\n                        :\r\n                        <Text>Представители отсутствуют</Text>}\r\n                </Space.Compact>\r\n            ),\r\n    })\r\nconst columnStatusComponent = (width = \"15%\") =>\r\n    ({\r\n        title: 'Статус',\r\n        dataIndex: 'status_data',\r\n        key: 'status_data',\r\n        width: width,\r\n        align: \"left\",\r\n        render:\r\n            (text, record) => (\r\n                <Space.Compact direction={\"vertical\"} style={{alignContent: \"start\"}}>\r\n                    <Text strong>Статус:</Text>\r\n                    <Text>{record.status?.name}</Text>\r\n                    <Text strong>Сроки:</Text>\r\n                    {\r\n                        record.date_signing ?\r\n                            <Text>с {dayjs(record?.date_signing).format(\"DD.MM.YYYY\")}</Text>\r\n                            :\r\n                            <Text type=\"danger\">Не подписан</Text>\r\n                    }\r\n                    {\r\n                        record.date_end ?\r\n                            <Text>по {dayjs(record?.date_end).format(\"DD.MM.YYYY\")}</Text>\r\n                            :\r\n                            <Text type=\"danger\">Не задана дата окончания</Text>\r\n                    }\r\n                    {\r\n                        record.date_end && record.date_signing ?\r\n                            (\r\n                                <Text>{dayjs(record.date_end).diff(dayjs(record.date_signing), 'day')} (дней)</Text>) : null\r\n                    }\r\n                </Space.Compact>\r\n            ),\r\n    })\r\nconst columnPriceComponent = (width = \"10%\") =>\r\n    ({\r\n        title: 'Стоимость',\r\n        permission: 'read-project-economy',\r\n        dataIndex: 'price_data',\r\n        key: 'price_data',\r\n        width: width,\r\n        align: \"left\",\r\n        render:\r\n            (text, record) => (\r\n                <Space.Compact direction={\"vertical\"} style={{alignContent: \"start\"}}>\r\n                    <Text strong>Полная стоимость:</Text>\r\n                    <Text>{record.price ? formatCurrency(record.price) : \"\"} ₽</Text>\r\n                    <Text strong>Аванс:</Text>\r\n                    <Text>{record.prepayment}%\r\n                        ({record.price && record.prepayment && formatCurrency(record.price / 100 * record.prepayment)} ₽)</Text>\r\n                </Space.Compact>\r\n            ),\r\n\r\n    })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/page/ProjectTable/components/TableColumn.js b/frontend/src/page/ProjectTable/components/TableColumn.js
--- a/frontend/src/page/ProjectTable/components/TableColumn.js	(revision 94d87624dd955a72898bb9f1a8f1b620a3b1d4cb)
+++ b/frontend/src/page/ProjectTable/components/TableColumn.js	(date 1721790879821)
@@ -1,17 +1,4 @@
-import {
-    Button,
-    Card,
-    DatePicker,
-    Divider,
-    Modal,
-    notification,
-    Popconfirm,
-    Row,
-    Space,
-    Tooltip,
-    Typography,
-    Upload
-} from "antd";
+import {Button, Card, DatePicker, Divider, Popconfirm, Row, Space, Tooltip, Typography, Upload} from "antd";
 import Link from "antd/es/typography/Link";
 import {
     DeleteOutlined, DownloadOutlined,
@@ -24,60 +11,29 @@
 import ProjectFileDownload from "../../components/script/fileDownloadScripts/ProjectFileDownload";
 import {facilitiesToFullCode} from "../../components/script/rebuildData/ProjectRebuilderQuery";
 import dayjs from "dayjs";
-import React, {useEffect, useState} from "react";
+import React from "react";
 import {StyledButtonGreen} from "../../components/style/ButtonStyles";
 import {UploadFileExecutorOrder, UploadFileProjectContractSigned} from "../../components/UploadFile";
 import LinkToDownload from "../../components/script/fileDownloadScripts/LinkToDownload";
-import {useLazyQuery, useMutation} from "@apollo/client";
+import {useLazyQuery} from "@apollo/client";
 import {BIKS_QUERY_BY_ID, PROJECTS_QUERY_BY_ID} from "../../../graphql/queries/allByID";
-import {CHANGE_TEMPLATE_TYPE_PROJECT} from "../../../graphql/mutations/project";
-import ProjectTasks from "../../DistributionTasksByProject";
-import {nanoid} from "nanoid";
-import ProjectForm from "../../ProjectForm";
-import IrdsProjectForm from "../../IrdToProjectForm";
-import StageToProjectForm from "../../StageToProjectForm";
-import {ColumnToolRender} from "./columns/ColumnToolRender";
 
 const formatCurrency = (amount) => {
     return amount.toLocaleString('ru-RU', {style: 'currency', currency: 'RUB'});
 };
 const {Text} = Typography;
-// progress
-// tool
-// main
-// customer
-// status
-// price
-
 
-export const GetColumns = ({
-                               options,
-                               columnSizes,
-                               permissions,
-                               toolProps,
-
-                               onUpdated
-                           }
-) => {
-    //TODO:
-    const columns = options.map(row=>row.name);
-    const countColumns = options.length;
-    options.includes("tool") && columns.push(columnToolComponent({width:"32px", ...toolProps}));
-    options.includes("main") && columns.push(columnMainDataComponent({width: "50%", onUpdated: () => onUpdated()}));
-    options.includes("customer") && columns.push(columnCustomerComponent({width: "15%"}));
-    options.includes("progress") && columns.push(columnProgressComponent({width: "5%"}));
-    options.includes("status") && columns.push(columnStatusComponent({width: "10%"}));
-    options.includes("price") && columns.push(columnPriceComponent({width: "15%"}));
-    return columns;
-}
 export const GetFullColumns = ({
                                    permissions,
+                                   setEditModalStatus,
+                                   setProjectTasksModalStatus,
+                                   createTemplate,
                                    onUpdated
                                }
 ) => ([
 
     //columnProgressComponent("5%"),
-    //columnToolComponent("20px"),
+    columnToolComponent("20px", setEditModalStatus, setProjectTasksModalStatus, createTemplate),
     columnMainDataComponent({width: "60%", onUpdated: () => onUpdated()}),
     columnCustomerComponent("15%"),
     columnStatusComponent("10%"),
@@ -135,16 +91,89 @@
         }
     }
 })
-
-const columnToolComponent = ({width = "2%", toolProps}) => {
-    return {
+const columnToolComponent = (width = "2%", setEditModalStatus, setProjectTasksModalStatus, createTemplate) =>
+    ({
         key: 'edit',
         width: width,
-        render: (text, record) => <>
-            <ColumnToolRender text={text} record={record} {...toolProps}/>
-        </>,
-    }
-}
+        render: (text, record) => (
+            <Space.Compact direction={"vertical"} style={{alignContent: "start"}}>
+                <Link>
+                    <Tooltip title={"Изменить данные проекта"}>
+                        <EditOutlined
+                            onClick={() => {
+                                setEditModalStatus({
+                                    type: "project",
+                                    project: record
+                                })
+                                console.log("dsa");
+                            }}/>
+                    </Tooltip>
+
+                </Link>
+                <Link type={"secondary"}>
+                    <Tooltip title={"Удаление недоступно (администратор)"}>
+
+                        <DeleteOutlined/>
+                    </Tooltip>
+                </Link>
+                <div>
+                    {!(record.project_stages.find(row => {
+                        return (row.date_end && row.date_start)
+                    })) ? (
+                        <Link type={"danger"}>
+                            <Tooltip title={"Недостаточно данных об этапах, для создания задач"}>
+                                <ReconciliationOutlined/>
+                            </Tooltip>
+                        </Link>
+                    ) : (
+                        <Link>
+                            <Tooltip title={"Создать задачи"}>
+                                <ReconciliationOutlined onClick={() => {
+                                    setProjectTasksModalStatus({
+                                        project_id: record.id,
+                                        mode: "create",
+                                    })
+                                }}/>
+                            </Tooltip>
+                        </Link>
+                    )}
+                </div>
+                <div>
+                    {record.id === record?.type_project_document?.template_project_id ?
+                        (
+                            <Row style={{margin: 'auto'}}>
+                                <Tooltip title={"Является шаблоном"}>
+                                    <Link type={"secondary"}>
+                                        <PushpinFilled/>
+                                    </Link>
+                                </Tooltip>
+                            </Row>)
+                        :
+                        <Row style={{margin: 'auto'}}>
+                            <Tooltip title={"Установить как шаблон"}>
+                                <Popconfirm
+                                    title={"Создание шаблона на основе этого проекта"}
+                                    description={"Вы уверены? это изменит существующий шаблон!"}
+                                    onConfirm={() => createTemplate(record.id, record?.type_project_document?.id)}
+                                    icon={
+                                        <Text type={"danger"}>
+                                            <PushpinOutlined/>
+                                        </Text>
+                                    }
+                                >
+                                    <Link>
+                                        <PushpinOutlined/>
+                                    </Link>
+                                </Popconfirm>
+                            </Tooltip>
+
+                        </Row>
+
+                    }
+                </div>
+            </Space.Compact>
+        ),
+    })
 const columnMainDataComponent = ({width = "48%", onUpdated}) =>
     ({
         title: 'Основные данные',
@@ -162,50 +191,50 @@
                 const fileId = maxNumberRecord ? maxNumberRecord.file_id : null;
 
                 return (
-                    <Space.Compact direction={"vertical"} style={{alignContent: "start"}}>
-                        <Title level={5} style={{marginTop: 0}}>{record.name}</Title>
-                        <Divider style={{margin: "3px"}}/>
-                        <Text>{record.number}</Text>
-                        <Text>({record.type_project_document?.code ?? ""}) {record.type_project_document?.name ?? ""}</Text>
-                        <Divider style={{margin: "3px", marginBottom: 0}}/>
-                        <Space.Compact direction={"horizontal"}>
-                            {record?.signed_file_id ? (
-                                    <>
-                                        <LinkToDownload fileId={record.signed_file_id}>Скачать (подписан)
-                                            от {record.date_signing}</LinkToDownload>
-                                    </>
-                                ) :
-                                (
-                                    <>
-                                        <ProjectFileDownload projectId={record.id} icon={<PlusOutlined/>}>Сгенерировать
-                                            договор</ProjectFileDownload>
-                                        {(fileId) ?
-                                            (<>
-                                                    <UploadFileProjectContractSigned
-                                                        type={"primary"}
-                                                        icon={<UploadOutlined/>}
-                                                        onUpdated={() => onUpdated()}
-                                                        projectId={record.id}>Загрузить
-                                                        подписанный файл</UploadFileProjectContractSigned>
+                        <Space.Compact direction={"vertical"} style={{alignContent: "start"}}>
+                            <Title level={5} style={{marginTop: 0}}>{record.name}</Title>
+                            <Divider style={{margin: "3px"}}/>
+                            <Text>{record.number}</Text>
+                            <Text>({record.type_project_document?.code ?? ""}) {record.type_project_document?.name ?? ""}</Text>
+                            <Divider style={{margin: "3px", marginBottom: 0}}/>
+                            <Space.Compact direction={"horizontal"}>
+                                {record?.signed_file_id ? (
+                                        <>
+                                            <LinkToDownload fileId={record.signed_file_id}>Скачать (подписан)
+                                                от {record.date_signing}</LinkToDownload>
+                                        </>
+                                    ) :
+                                    (
+                                        <>
+                                            <ProjectFileDownload projectId={record.id} icon={<PlusOutlined/>}>Сгенерировать
+                                                договор</ProjectFileDownload>
+                                            {(fileId) ?
+                                                (<>
+                                                        <UploadFileProjectContractSigned
+                                                            type={"primary"}
+                                                            icon={<UploadOutlined/>}
+                                                            onUpdated={() => onUpdated()}
+                                                            projectId={record.id}>Загрузить
+                                                            подписанный файл</UploadFileProjectContractSigned>
 
-                                                    <LinkToDownload
-                                                        fileId={fileId}
-                                                        icon={<DownloadOutlined/>}>Скачать
-                                                        последний вариант</LinkToDownload>
-                                                    <Button icon={<MoreOutlined/>}/>
-                                                </>
-                                            ) :
-                                            (
-                                                <>
-                                                </>
-                                            )}
+                                                        <LinkToDownload
+                                                            fileId={fileId}
+                                                            icon={<DownloadOutlined/>}>Скачать
+                                                            последний вариант</LinkToDownload>
+                                                        <Button icon={<MoreOutlined/>}/>
+                                                    </>
+                                                ) :
+                                                (
+                                                    <>
+                                                    </>
+                                                )}
 
-                                    </>
-                                )}
+                                        </>
+                                    )}
 
-                        </Space.Compact>
-                    </Space.Compact>
-                )
+                            </Space.Compact>
+                        </Space.Compact>
+               )
             }
 
     })
Index: frontend/src/graphql/mutations/project.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {gql} from \"@apollo/client\";\r\n\r\n\r\nexport const ADD_PROJECT_MUTATION = gql`\r\n    mutation AddProject($data: ProjectInput) {\r\n        createProject(data: $data) {\r\n            id\r\n            number\r\n            name\r\n            prepayment\r\n            organization_customer {\r\n                id\r\n                name\r\n            }\r\n            type_project_document {\r\n                id\r\n                code\r\n                name\r\n                template_project_id\r\n                group {\r\n                    id\r\n                    code\r\n                    name\r\n                }\r\n            }\r\n            facilities {\r\n                id\r\n                name\r\n                code\r\n                group_facility {\r\n                    id\r\n                    name\r\n                    code\r\n                    subselection_facility {\r\n                        id\r\n                        name\r\n                        code\r\n                        selection_facility {\r\n                            id\r\n                            name\r\n                            code\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            date_signing\r\n            duration\r\n            date_end\r\n            date_create\r\n            status {\r\n                name_key\r\n                name\r\n            }\r\n            date_completion\r\n            delegations {\r\n                id\r\n                first_name\r\n                last_name\r\n                patronymic\r\n            }\r\n            project_stages {\r\n                stage_id\r\n                project_id\r\n                number\r\n                stage {\r\n                    id\r\n                    name\r\n                }\r\n                date_start\r\n                duration\r\n                date_end\r\n                percent\r\n                price\r\n            }\r\n            project_tasks {\r\n                id\r\n                task_id\r\n                date_start\r\n                duration\r\n                date_end\r\n                price\r\n            }\r\n            project_irds {\r\n                ird_id\r\n                project_id\r\n                stage_number\r\n                application_project\r\n                ird {\r\n                    id\r\n                    name\r\n                }\r\n                received_date\r\n            }\r\n            price\r\n\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const UPDATE_PROJECT_MUTATION = gql`\r\n    mutation UpdateProject($id: ID, $data: ProjectInput) {\r\n        updateProject(id: $id, data: $data) {\r\n            id\r\n            number\r\n            name\r\n            prepayment\r\n            organization_customer {\r\n                id\r\n                name\r\n            }\r\n            type_project_document {\r\n                id\r\n                code\r\n                name\r\n                template_project_id\r\n                group {\r\n                    id\r\n                    code\r\n                    name\r\n                }\r\n            }\r\n            facilities {\r\n                id\r\n                name\r\n                code\r\n                group_facility {\r\n                    id\r\n                    name\r\n                    code\r\n                    subselection_facility {\r\n                        id\r\n                        name\r\n                        code\r\n                        selection_facility {\r\n                            id\r\n                            name\r\n                            code\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            date_signing\r\n            duration\r\n            date_end\r\n            date_create\r\n            status {\r\n                name_key\r\n                name\r\n            }\r\n            date_completion\r\n            delegations {\r\n                id\r\n                first_name\r\n                last_name\r\n                patronymic\r\n            }\r\n            project_stages {\r\n                project_id\r\n                stage_id\r\n                number\r\n                stage {\r\n                    id\r\n                    name\r\n                }\r\n                date_start\r\n                duration\r\n                date_end\r\n                percent\r\n                price\r\n            }\r\n            project_tasks {\r\n                id\r\n                task_id\r\n                date_start\r\n                duration\r\n                date_end\r\n                price\r\n            }\r\n            project_irds {\r\n                ird_id\r\n                project_id\r\n                stage_number\r\n                application_project\r\n                ird {\r\n                    id\r\n                    name\r\n                }\r\n                received_date\r\n            }\r\n            price\r\n\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const PROJECT_TASKS_DETAIL_UPDATE = gql`\r\n    mutation ProjectTaskDetailUpdate($data: TaskToProjectDetailInput!) {\r\n        projectTaskDetailUpdate(data: $data) {\r\n            id\r\n            price\r\n            task_id\r\n            date_start\r\n            duration\r\n            date_end\r\n            executor {\r\n                id\r\n                passport {\r\n                    id\r\n                    firstname\r\n                    lastname\r\n                    patronymic\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const PROJECT_TASKS_STRUCTURE_UPDATE = gql`\r\n    mutation ProjectTasksStructureUpdate($data: [TaskToProjectStructureInput]!) {\r\n        projectTasksStructureUpdate(data: $data) {\r\n            id\r\n            project_tasks {\r\n                id\r\n                task_id\r\n                project_task_inherited_id\r\n                task {\r\n                    id\r\n                    name\r\n                }\r\n                date_start\r\n                duration\r\n                date_end\r\n                stage_number\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PROJECT_IRDS_SYNC_MUTATION = gql`\r\n    mutation ProjectIrdsSync($data: [IrdToProjectInput]!) {\r\n        projectIrdsSync(items: $data) {\r\n            id\r\n            project_irds {\r\n                ird_id\r\n                project_id\r\n                ird {\r\n                    id\r\n                    name\r\n                }\r\n                received_date\r\n                stage_number\r\n                application_project\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PROJECT_STAGE_SYNC_MUTATION = gql`\r\n    mutation ProjectStagesSync($data: [StageToProjectInput]!) {\r\n        projectStagesSync(items: $data) {\r\n            id\r\n            project_stages {\r\n                stage_id\r\n                project_id\r\n                number\r\n                stage {\r\n                    id\r\n                    name\r\n                    task_id\r\n                }\r\n                date_start\r\n                duration\r\n                date_end\r\n                percent\r\n                price\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const CHANGE_TEMPLATE_TYPE_PROJECT = gql`\r\n    mutation ChangeTemplateTypeProject ( $typeProject: ID! ,$newTemplate: ID!) {\r\n        changeTemplateTypeProject(typeProject: $typeProject ,newTemplate: $newTemplate) {\r\n            template_project_id\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const IRDS_PROJECT_DOWNLOAD = gql`\r\n    mutation IrdsProjectFileDownload($id: ID!) {\r\n        projectIrdsFileDownload(projectId: $id) {\r\n            url\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PAYMENT_INVOICE_PROJECT_DOWNLOAD = gql`\r\n    mutation PaymentInvoiceProjectFileDownload($id: ID!, $stageNumber: ID, $isPrepayment: Boolean) {\r\n        projectPaymentInvoiceFileDownload(projectId: $id, stageNumber: $stageNumber, isPrepayment: $isPrepayment) {\r\n            url\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ACT_RENDERING_PROJECT_DOWNLOAD = gql`\r\n    mutation ActRenderingProjectFileDownload($id: ID!, $stageNumber: Int) {\r\n        projectActRenderingFileDownload(projectId: $id, stageNumber: $stageNumber) {\r\n            url\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TASK_EXECUTOR_CONTRACT_DOWNLOAD = gql`\r\n    mutation TaskExecutorContractDownload($projectTasksIds: [ID]!) {\r\n        taskExecutorContractFileDownload(projectTasksIds: $projectTasksIds) {\r\n            url\r\n        }\r\n    }\r\n`;\r\n\r\nexport const STAGE_PROJECT_DOWNLOAD = gql`\r\n    mutation StageProjectFileDownload($id: ID!) {\r\n        projectStagesFileDownload(projectId: $id) {\r\n            url\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CONTRACT_PROJECT_DOWNLOAD = gql`\r\n    mutation ContractProjectFileDownload($id: ID!) {\r\n        projectOrderFileDownload(projectId: $id) {\r\n            url\r\n        }\r\n    }\r\n`;\r\nexport const PROJECT_CONTRACT_GENERATED = gql`\r\n    mutation ProjectContractGenerated($id: ID!, $dateCreateContract: String!) {\r\n        projectContractGenerated(projectId: $id, dateCreateContract: $dateCreateContract) {\r\n            id\r\n            project_contract_history {\r\n                file_id\r\n                number\r\n                date_create_contract\r\n                comment\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/graphql/mutations/project.js b/frontend/src/graphql/mutations/project.js
--- a/frontend/src/graphql/mutations/project.js	(revision 94d87624dd955a72898bb9f1a8f1b620a3b1d4cb)
+++ b/frontend/src/graphql/mutations/project.js	(date 1721790880204)
@@ -74,7 +74,6 @@
             }
             project_tasks {
                 id
-                task_id
                 date_start
                 duration
                 date_end
@@ -171,7 +170,6 @@
             }
             project_tasks {
                 id
-                task_id
                 date_start
                 duration
                 date_end
@@ -199,8 +197,8 @@
     mutation ProjectTaskDetailUpdate($data: TaskToProjectDetailInput!) {
         projectTaskDetailUpdate(data: $data) {
             id
+            description
             price
-            task_id
             date_start
             duration
             date_end
@@ -214,6 +212,8 @@
                 }
             }
         }
+
+
     }
 `;
 export const PROJECT_TASKS_STRUCTURE_UPDATE = gql`
@@ -222,7 +222,6 @@
             id
             project_tasks {
                 id
-                task_id
                 project_task_inherited_id
                 task {
                     id
Index: frontend/src/page/ProjectTable/components/ProjectTableComponent.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Modal, notification, Space, Table, Typography} from \"antd\";\r\n\r\n\r\nimport IrdsProjectForm from \"../../IrdToProjectForm\";\r\nimport StageToProjectForm from \"../../StageToProjectForm\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport TableStages from \"./TableStages\";\r\nimport TableIrds from \"./TableIrds\";\r\nimport TableExecutors from \"./TableExecutors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport { useQuery} from \"@apollo/client\";\r\nimport {PROJECTS_QUERY} from \"../../../graphql/queries/all\";\r\nimport {nanoid} from \"nanoid\";\r\nimport {GetColumns} from \"./TableColumn\";\r\n\r\nconst {Text} = Typography;\r\n\r\nconst ProjectTableComponent = ({projectStatuses, mode, search, options}) => {\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [sortField, setSortField] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('');\r\n\r\n\r\n\r\n    const [expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n    const [currentSort, setCurrentSort] = useState({});\r\n    const [column, setColumn] = useState();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        setColumn(\r\n            GetColumns({\r\n                options: options,\r\n                permissions: \"all\",\r\n                onUpdated: () => refetch()\r\n            }))\r\n        // switch (mode) {\r\n        //     case \"full\":\r\n        //\r\n        //         break;\r\n        //     case \"request\":\r\n        //         break;\r\n        //     case \"approval_kp\":\r\n        //         break;\r\n        //     case \"approval_agreement\":\r\n        //         break;\r\n        //     case \"working\":\r\n        //         break;\r\n        // }\r\n\r\n    }, []);\r\n    const openNotification = (placement, type, message) => {\r\n        notification[type]({\r\n            message: message,\r\n            placement,\r\n        });\r\n    };\r\n\r\n    const ExpandedRowRenderComponent = ({project}) => {\r\n        const [editModalStatus, setEditModalStatus] = useState();\r\n\r\n        return (\r\n            <>\r\n                <Space.Compact  direction={\"horizontal\"}>\r\n                    <TableStages data-permission={\"read-project-stage\"} project={project}\r\n                                 setEditModalStatus={()=>setEditModalStatus(\"stages\")}/>\r\n                    <TableIrds data-permission={\"read-project-ird\"} project={project}\r\n                               setEditModalStatus={()=>setEditModalStatus(\"irds\")}/>\r\n                    <TableExecutors data-permission={\"read-project-task-executor\"}\r\n                                    project={project}\r\n                                    setEditModalStatus={()=>setEditModalStatus(\"executor\")}/>\r\n                </Space.Compact>\r\n\r\n                <Modal\r\n                    key={nanoid()}\r\n                    open={editModalStatus}\r\n                    onCancel={() => setEditModalStatus(null)}\r\n                    footer={null}\r\n                    title={getNameModalView(editModalStatus)}\r\n                    width={editModalStatus === \"project\" ? 500 : 1300}\r\n                    onClose={() => setEditModalStatus(null)}\r\n                >\r\n                    {renderEditModalContent({\r\n                        project: project,\r\n                        model: editModalStatus,\r\n                        onCompleted: () => setEditModalStatus(null)\r\n                    })}\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n    // Мутация для удаления\r\n\r\n    const {loading: loading, error: error, data: data, refetch: refetch} = useQuery(PROJECTS_QUERY, {\r\n        variables: {\r\n            projectStatuses: projectStatuses,\r\n            queryOptions: {\r\n                page,\r\n                limit,\r\n                search,\r\n                sortField,\r\n                sortOrder\r\n            }\r\n        },\r\n        fetchPolicy: \"network-а\",\r\n        onCompleted: (data) => {\r\n            console.log(\"queri IPA\", data);\r\n        }\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     if (!editModalStatus)\r\n    //         refetch();\r\n    // }, [editModalStatus]);\r\n\r\n\r\n    const getNameModalView = (type) => {\r\n        switch (type) {\r\n            case 'project':\r\n                return \"Данные проекта\";\r\n            case 'irds':\r\n                return \"Список ИРД\";\r\n            case 'stages':\r\n                return \"Список этапов\";\r\n            case 'tasks':\r\n                return \"Список задач\";\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n// Таблица\r\n    const renderEditModalContent = ({project, model, onCompleted}) => {\r\n        const commonProps = {\r\n            onCompleted: () => onCompleted(),\r\n            project: project,\r\n        };\r\n\r\n        switch (model) {\r\n            case 'irds':\r\n                return <IrdsProjectForm {...commonProps} />;\r\n            case 'stages':\r\n                return <StageToProjectForm {...commonProps} />;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const onChange = (pagination, filters, sorter) => {\r\n        if ((sorter.field !== undefined) && currentSort !== sorter) {\r\n            setCurrentSort(sorter);\r\n            if (sortField !== sorter.field) {\r\n                setSortField(sorter.field);\r\n                setSortOrder(\"asc\");\r\n            } else {\r\n                setSortField(sortField);\r\n                switch (sortOrder) {\r\n                    case (\"asc\"):\r\n                        setSortOrder(\"desc\");\r\n                        break;\r\n                    case (\"desc\"):\r\n                        setSortOrder(\"\");\r\n                        break;\r\n                    case (\"\"):\r\n                        setSortOrder(\"asc\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                style={{border: \"black\"}}\r\n                rowClassName={(record) => 'my-ant-table-row-' + record?.status?.name_key?.toLowerCase()\r\n                    //+ ((record.id % 2 === 0) ? ' my-ant-table-row-danger' : ' my-ant-table-row-warning')\r\n                }\r\n                size={'small'}\r\n                sticky={{\r\n                    offsetHeader: '64px',\r\n                }}\r\n                loading={loading}\r\n                dataSource={data?.projects?.items?.map((org, index) => ({...org, key: index}))}\r\n                columns={column}\r\n                bordered\r\n\r\n                onChange={onChange}\r\n                pagination={{\r\n                    total: data?.projects?.count,\r\n                    current: page,\r\n                    pageSize: limit,\r\n                    onChange: (page, limit) => {\r\n                        setPage(page);\r\n                        setLimit(limit)\r\n                    },\r\n                    onShowSizeChange: (current, size) => {\r\n                        setPage(1);\r\n                        setLimit(size);\r\n                    },\r\n                    showSizeChanger: true,\r\n                    pageSizeOptions: ['10', '20', '50', '100'],\r\n                }}\r\n                expandable={{\r\n                    expandedRowKeys,\r\n                    columnWidth: 32,\r\n                    onExpand: (expanded, record) => {\r\n                        const keys = expanded ? [record.key] : [];\r\n                        setExpandedRowKeys(keys);\r\n                    },\r\n                    expandedRowRender: (record) => (\r\n                        <Space block style={{padding: 2, width: \"100%\"}}>\r\n                            <ExpandedRowRenderComponent project={record} />\r\n                        </Space>\r\n                    ),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProjectTableComponent;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/page/ProjectTable/components/ProjectTableComponent.js b/frontend/src/page/ProjectTable/components/ProjectTableComponent.js
--- a/frontend/src/page/ProjectTable/components/ProjectTableComponent.js	(revision 94d87624dd955a72898bb9f1a8f1b620a3b1d4cb)
+++ b/frontend/src/page/ProjectTable/components/ProjectTableComponent.js	(date 1721790878848)
@@ -1,6 +1,7 @@
-import { Modal, notification, Space, Table, Typography} from "antd";
+import {Button, Modal, notification, Space, Table, Typography} from "antd";
 
-
+import ProjectTasks from "../../DistributionTasksByProject";
+import ProjectForm from "../../ProjectForm";
 import IrdsProjectForm from "../../IrdToProjectForm";
 import StageToProjectForm from "../../StageToProjectForm";
 import React, {useEffect, useState} from "react";
@@ -8,46 +9,34 @@
 import TableIrds from "./TableIrds";
 import TableExecutors from "./TableExecutors";
 import {useNavigate} from "react-router-dom";
-import { useQuery} from "@apollo/client";
+import {useMutation, useQuery} from "@apollo/client";
+import {CHANGE_TEMPLATE_TYPE_PROJECT} from "../../../graphql/mutations/project";
 import {PROJECTS_QUERY} from "../../../graphql/queries/all";
 import {nanoid} from "nanoid";
-import {GetColumns} from "./TableColumn";
+import {GetFullColumns} from "./TableColumn";
 
 const {Text} = Typography;
 
-const ProjectTableComponent = ({projectStatuses, mode, search, options}) => {
+const ProjectTableComponent = ({projectStatuses, search}) => {
     const [page, setPage] = useState(1);
     const [limit, setLimit] = useState(10);
     const [sortField, setSortField] = useState('');
     const [sortOrder, setSortOrder] = useState('');
-
+    const [editModalStatus, setEditModalStatus] = useState({});
 
-
+    const [projectTasksModalStatus, setProjectTasksModalStatus] = useState(false);
     const [expandedRowKeys, setExpandedRowKeys] = useState([]);
     const [currentSort, setCurrentSort] = useState({});
     const [column, setColumn] = useState();
     const navigate = useNavigate();
     useEffect(() => {
-        setColumn(
-            GetColumns({
-                options: options,
-                permissions: "all",
-                onUpdated: () => refetch()
-            }))
-        // switch (mode) {
-        //     case "full":
-        //
-        //         break;
-        //     case "request":
-        //         break;
-        //     case "approval_kp":
-        //         break;
-        //     case "approval_agreement":
-        //         break;
-        //     case "working":
-        //         break;
-        // }
-
+       setColumn(GetFullColumns({
+           permissions: "all",
+           setEditModalStatus: (value)=>setEditModalStatus(value),
+           setProjectTasksModalStatus: (value) => setProjectTasksModalStatus(value),
+           createTemplate: (value) => createTemplate(value),
+           onUpdated: () => refetch()
+       }))
     }, []);
     const openNotification = (placement, type, message) => {
         notification[type]({
@@ -56,39 +45,7 @@
         });
     };
 
-    const ExpandedRowRenderComponent = ({project}) => {
-        const [editModalStatus, setEditModalStatus] = useState();
 
-        return (
-            <>
-                <Space.Compact  direction={"horizontal"}>
-                    <TableStages data-permission={"read-project-stage"} project={project}
-                                 setEditModalStatus={()=>setEditModalStatus("stages")}/>
-                    <TableIrds data-permission={"read-project-ird"} project={project}
-                               setEditModalStatus={()=>setEditModalStatus("irds")}/>
-                    <TableExecutors data-permission={"read-project-task-executor"}
-                                    project={project}
-                                    setEditModalStatus={()=>setEditModalStatus("executor")}/>
-                </Space.Compact>
-
-                <Modal
-                    key={nanoid()}
-                    open={editModalStatus}
-                    onCancel={() => setEditModalStatus(null)}
-                    footer={null}
-                    title={getNameModalView(editModalStatus)}
-                    width={editModalStatus === "project" ? 500 : 1300}
-                    onClose={() => setEditModalStatus(null)}
-                >
-                    {renderEditModalContent({
-                        project: project,
-                        model: editModalStatus,
-                        onCompleted: () => setEditModalStatus(null)
-                    })}
-                </Modal>
-            </>
-        )
-    }
     // Мутация для удаления
 
     const {loading: loading, error: error, data: data, refetch: refetch} = useQuery(PROJECTS_QUERY, {
@@ -102,18 +59,28 @@
                 sortOrder
             }
         },
-        fetchPolicy: "network-а",
+        fetchPolicy: "cache-and-network",
         onCompleted: (data) => {
             console.log("queri IPA", data);
         }
     });
-
+    const [mutateChangeTemplate] = useMutation(CHANGE_TEMPLATE_TYPE_PROJECT, {
+        onCompleted: (data) => {
+            openNotification('topRight', 'success', `Шаблон изменён`);
+        },
+        onError: (error) => {
+            openNotification('topRight', 'error', `Ошибка при изменении шаблона : ${error.message}`);
+        },
+    });
     // useEffect(() => {
     //     if (!editModalStatus)
     //         refetch();
     // }, [editModalStatus]);
 
-
+    const createTemplate = (projectId, typeProjectId) => {
+        if (projectId && typeProjectId)
+            mutateChangeTemplate({variables: {typeProject: typeProjectId, newTemplate: projectId}});
+    }
     const getNameModalView = (type) => {
         switch (type) {
             case 'project':
@@ -129,23 +96,25 @@
         }
     }
 // Таблица
-    const renderEditModalContent = ({project, model, onCompleted}) => {
-        const commonProps = {
-            onCompleted: () => onCompleted(),
-            project: project,
-        };
 
-        switch (model) {
-            case 'irds':
-                return <IrdsProjectForm {...commonProps} />;
-            case 'stages':
-                return <StageToProjectForm {...commonProps} />;
-            default:
-                return null;
-        }
-    };
+
+
 
+    const expandedRowRender = (project) => {
+        return (
+            <Space.Compact direction={"horizontal"}>
+                <TableStages data-permission={"read-project-stage"} project={project}
+                             setEditModalStatus={setEditModalStatus}/>
+                <TableIrds data-permission={"read-project-ird"} project={project}
+                           setEditModalStatus={setEditModalStatus}/>
+                <TableExecutors data-permission={"read-project-task-executor"}
+                                //onUpdated={refetch()}
+                                project={project}
+                                setEditModalStatus={setEditModalStatus}/>
+            </Space.Compact>
 
+        )
+    }
 
     const onChange = (pagination, filters, sorter) => {
         if ((sorter.field !== undefined) && currentSort !== sorter) {
@@ -185,8 +154,6 @@
                 loading={loading}
                 dataSource={data?.projects?.items?.map((org, index) => ({...org, key: index}))}
                 columns={column}
-                bordered
-
                 onChange={onChange}
                 pagination={{
                     total: data?.projects?.count,
@@ -205,21 +172,71 @@
                 }}
                 expandable={{
                     expandedRowKeys,
-                    columnWidth: 32,
                     onExpand: (expanded, record) => {
                         const keys = expanded ? [record.key] : [];
                         setExpandedRowKeys(keys);
                     },
                     expandedRowRender: (record) => (
-                        <Space block style={{padding: 2, width: "100%"}}>
-                            <ExpandedRowRenderComponent project={record} />
-                        </Space>
-                    ),
-                }}
-            />
+                        <div style={{padding: 2}}>
+                            {expandedRowRender(record)}
+                        </div>
+                    ),
+                }}
+            />
+            <Modal
+                key={projectTasksModalStatus?.project?.id}
+                open={projectTasksModalStatus?.mode}
+                onCancel={() => setProjectTasksModalStatus({
+                    project_id: null,
+                    mode: null,
+                })}
+                footer={null}
+                width={1400}
+                title={"Создание задач"}
+                onClose={() => setProjectTasksModalStatus({
+                    project_id: null,
+                    mode: null,
+                })}
+            >
+                <ProjectTasks //onChange={() => refetch()}
+                              project={data?.projects?.items?.find(row => row.id === projectTasksModalStatus.project_id)}/>
+            </Modal>
+            <Modal
+                key={nanoid()}
+                open={editModalStatus?.type}
+                onCancel={() => setEditModalStatus(null)}
+                footer={null}
+                title={getNameModalView(editModalStatus?.type)}
+                width={editModalStatus?.type === "project" ? 500 : 1300}
+                onClose={() => setEditModalStatus(null)}
+            >
+                {renderEditModalContent({
+                    project: editModalStatus?.project,
+                    model: editModalStatus?.type,
+                    onCompleted: ()=>setEditModalStatus(null)})}
+            </Modal>
+
         </div>
     );
 }
+const renderEditModalContent = ({project, model, onCompleted}) => {
+    const commonProps = {
+        onCompleted: () => onCompleted(),
+        project: project,
+    };
 
+    switch (model) {
+        case 'project':
+            return <ProjectForm style={{width: '500px'}} {...commonProps} />;
+        case 'irds':
+            return <IrdsProjectForm {...commonProps} />;
+        case 'stages':
+            return <StageToProjectForm {...commonProps} />;
+        case 'tasks':
+            return <ProjectTasks {...commonProps} />;
+        default:
+            return null;
+    }
+};
 
 export default ProjectTableComponent;
\ No newline at end of file
